(-58, -93, 'DDGngx_sys_errlist[err - ngx_first_error]', -1)
(-74, -39, 'CDG', -1)
(-18, -21, 'DDGngx_last_error', -1)
(-74, -80, 'DDGp', -1)
(-21, -39, 'DDGngx_last_error', -1)
(-29, -33, 'DDGngx_sys_errlist', -1)
(-29, -84, 'DDGngx_sys_errlist', -1)
(-80, -93, 'DDGp', -1)
(-15, -21, 'DDGngx_first_error', -1)
(-84, -93, 'DDGngx_sys_errlist[err - ngx_first_error].len', -1)
(-33, -53, 'DDGNULL', -1)
(-49, -108, 'DDGerr', -1)
(-33, -108, 'CDG', -1)
(-33, -58, 'DDGngx_sys_errlist', -1)
(-21, -84, 'DDGngx_first_error', -1)
(-84, -58, 'DDGngx_first_error', -1)
(-39, -49, 'CDG', -1)
(-29, -93, 'DDGngx_sys_errlist', -1)
(-53, -58, 'CDG', -1)
(-18, -39, 'DDGngx_last_error', -1)
(-58, -84, 'DDGngx_first_error', -1)
(-66, -70, 'DDGlen', -1)
(-105, -108, 'DDGerr', -1)
(-70, -80, 'DDGlen', -1)
(-84, -93, 'DDGngx_first_error', -1)
(-15, -58, 'DDGngx_first_error', -1)
(-93, -58, 'DDGngx_first_error', -1)
(-39, -102, 'CDG', -1)
(-80, -84, 'DDGlen', -1)
(-53, -70, 'CDG', -1)
(-74, -93, 'CDG', -1)
(-15, -93, 'DDGngx_first_error', -1)
(-74, -80, 'CDG', -1)
(-33, -74, 'DDGNULL', -1)
(-74, -108, 'CDG', -1)
(-21, -39, 'DDGngx_first_error', -1)
(-29, -108, 'DDGlen', -1)
(-33, -84, 'DDGngx_sys_errlist', -1)
(-53, -74, 'CDG', -1)
(-21, -29, 'DDGlen', -1)
(-66, -80, 'DDGmsg', -1)
(-53, -66, 'DDGmsg', -1)
(-29, -58, 'DDGngx_sys_errlist', -1)
(-53, -66, 'CDG', -1)
(-84, -93, 'DDGerr', -1)
(-70, -74, 'DDGp', -1)
(-39, -53, 'CDG', -1)
(-21, -58, 'DDGngx_first_error', -1)
(-58, -84, 'DDGngx_sys_errlist[err - ngx_first_error]', -1)
(-15, -84, 'DDGngx_first_error', -1)
(-49, -58, 'DDGerr', -1)
(-39, -49, 'DDGerr', -1)
(-53, -74, 'DDGNULL', -1)
(-53, -39, 'CDG', -1)
(-74, -115, 'CDG', -1)
(-74, -53, 'DDGNULL', -1)
(-58, -93, 'DDGngx_first_error', -1)
(-15, -39, 'DDGngx_first_error', -1)
(-58, -39, 'DDGerr', -1)
(-33, -39, 'CDG', -1)
(-93, -39, 'DDGerr', -1)
(-74, -105, 'CDG', -1)
(-49, -53, 'DDGmsg', -1)
(-33, -105, 'CDG', -1)
(-33, -115, 'CDG', -1)
(-33, -93, 'DDGngx_sys_errlist', -1)
(-93, -84, 'DDGngx_sys_errlist[err - ngx_first_error].data', -1)
(-74, -84, 'CDG', -1)
(-21, -93, 'DDGngx_first_error', -1)
(-49, -84, 'DDGerr', -1)
(-93, -58, 'DDGngx_sys_errlist[err - ngx_first_error].data', -1)
(-70, -108, 'DDGlen', -1)
(-93, -84, 'DDGngx_first_error', -1)
(-84, -58, 'DDGngx_sys_errlist[err - ngx_first_error].len', -1)
(-29, -70, 'DDGlen', -1)
(-130, -142, 'CDG', 1)
(-126, -130, 'DDGmsg', 1)
(-130, -135, 'CDG', 1)
(-130, -149, 'DDGmsg', 1)
(-135, -158, 'DDGmsg', 1)
(-135, -142, 'DDGngx_unknown_error.data', 1)
(-142, -153, 'DDGlen', 1)
(-149, -158, 'DDGmsg', 1)
(-130, -149, 'CDG', 1)
(-149, -153, 'DDGlen', 1)
(-121, -153, 'DDGsize', 1)
(-153, -158, 'DDGsize', 1)
===========================
(-38, -1, '-', 0, '-178', 'goto failed;')
(-21, -1, '-', 0, '-174', 'len = (ngx_last_error - ngx_first_error) * sizeof(ngx_str_t)')
(-105, -1, '-', 0, '-205', 'err = errno')
(-53, -1, '-', 0, '-184', 'if (msg == NULL)')
(-5, 1, '-', 0, '+49', 'return NGX_OK;')
(-65, -1, '-', 0, '-186', 'continue;')
(-8, -1, '-', 0, '-95', 'ngx_strerror_init (void)')
(-18, -1, '-', 0, '-105', 'ngx_last_error = NGX_SYS_NERR')
(-29, -1, '-', 0, '-176', 'ngx_sys_errlist = malloc(len)')
(-102, -1, '-', 0, '-201', 'return NGX_OK;')
(-70, -1, '-', 0, '-191', 'p = malloc(len)')
(-84, -1, '-', 0, '-197', 'ngx_sys_errlist[err - ngx_first_error].len = len')
(-15, -1, '-', 0, '-104', 'ngx_first_error = 0')
(-9, -1, '-', 0, '-96', 'void')
(-33, -1, '-', 0, '-177', 'if (ngx_sys_errlist == NULL)')
(-66, -1, '-', 0, '-189', 'len = ngx_strlen(msg)')
(-79, -1, '-', 0, '-193', 'goto failed;')
(-58, -1, '-', 0, '-185', 'ngx_sys_errlist[err - ngx_first_error] = ngx_unknown_error')
(-2, 1, '-', 0, '+46', 'ngx_strerror_init (void)')
(-3, 1, '-', 0, '+47', 'void')
(-39, -1, '-', 0, '-181', 'for (err = ngx_first_error; err < ngx_last_error; err++)')
(-74, -1, '-', 0, '-192', 'if (p == NULL)')
(-49, -1, '-', 0, '-182', 'msg = strerror(err)')
(-93, -1, '-', 0, '-198', 'ngx_sys_errlist[err - ngx_first_error].data = p')
(-80, -1, '-', 0, '-196', 'ngx_memcpy(p, msg, len)')
(-104, -1, '-', 0, '-203', 'failed:')
(-115, -1, '-', 0, '-208', 'return NGX_ERROR;')
(-108, -1, '-', 0, '-206', 'ngx_log_stderr(0, "malloc(%uz) failed (%d: %s)", len, err, strerror(err))')
(-153, 1, '-', 0, '+40', 'size = ngx_min(size, len)')
(-149, 1, '-', 0, '+37', 'len = ngx_strlen(msg)')
(-130, 1, '-', 0, '+32', 'if (msg == NULL)')
(-147, 1, '-', 0, '+36', 'else')
(-135, 1, '-', 0, '+33', 'msg = (char *) ngx_unknown_error.data')
(-121, 1, '-', 0, '+25', 'u_char *errstr')
(-158, 1, '-', 0, '+42', 'return ngx_cpymem(errstr, msg, size);')
(-142, 1, '-', 0, '+34', 'len = ngx_unknown_error.len')
(-119, 1, '-', 0, '+24', 'ngx_strerror (ngx_err_t err,u_char *errstr,size_t size)')
(-126, 1, '-', 0, '+30', 'msg = strerrordesc_np(err)')
---------------------------
(-58, -93, 'DDGngx_sys_errlist[err - ngx_first_error]', -1)
(-74, -39, 'CDG', -1)
(-18, -21, 'DDGngx_last_error', -1)
(-74, -80, 'DDGp', -1)
(-21, -39, 'DDGngx_last_error', -1)
(-29, -33, 'DDGngx_sys_errlist', -1)
(-29, -84, 'DDGngx_sys_errlist', -1)
(-80, -93, 'DDGp', -1)
(-15, -21, 'DDGngx_first_error', -1)
(-84, -93, 'DDGngx_sys_errlist[err - ngx_first_error].len', -1)
(-33, -53, 'DDGNULL', -1)
(-49, -108, 'DDGerr', -1)
(-33, -108, 'CDG', -1)
(-33, -58, 'DDGngx_sys_errlist', -1)
(-21, -84, 'DDGngx_first_error', -1)
(-84, -58, 'DDGngx_first_error', -1)
(-39, -49, 'CDG', -1)
(-29, -93, 'DDGngx_sys_errlist', -1)
(-53, -58, 'CDG', -1)
(-18, -39, 'DDGngx_last_error', -1)
(-58, -84, 'DDGngx_first_error', -1)
(-66, -70, 'DDGlen', -1)
(-105, -108, 'DDGerr', -1)
(-70, -80, 'DDGlen', -1)
(-84, -93, 'DDGngx_first_error', -1)
(-15, -58, 'DDGngx_first_error', -1)
(-93, -58, 'DDGngx_first_error', -1)
(-39, -102, 'CDG', -1)
(-80, -84, 'DDGlen', -1)
(-53, -70, 'CDG', -1)
(-74, -93, 'CDG', -1)
(-15, -93, 'DDGngx_first_error', -1)
(-74, -80, 'CDG', -1)
(-33, -74, 'DDGNULL', -1)
(-74, -108, 'CDG', -1)
(-21, -39, 'DDGngx_first_error', -1)
(-29, -108, 'DDGlen', -1)
(-33, -84, 'DDGngx_sys_errlist', -1)
(-53, -74, 'CDG', -1)
(-21, -29, 'DDGlen', -1)
(-66, -80, 'DDGmsg', -1)
(-53, -66, 'DDGmsg', -1)
(-29, -58, 'DDGngx_sys_errlist', -1)
(-53, -66, 'CDG', -1)
(-84, -93, 'DDGerr', -1)
(-70, -74, 'DDGp', -1)
(-39, -53, 'CDG', -1)
(-21, -58, 'DDGngx_first_error', -1)
(-58, -84, 'DDGngx_sys_errlist[err - ngx_first_error]', -1)
(-15, -84, 'DDGngx_first_error', -1)
(-49, -58, 'DDGerr', -1)
(-39, -49, 'DDGerr', -1)
(-53, -74, 'DDGNULL', -1)
(-53, -39, 'CDG', -1)
(-74, -115, 'CDG', -1)
(-74, -53, 'DDGNULL', -1)
(-58, -93, 'DDGngx_first_error', -1)
(-15, -39, 'DDGngx_first_error', -1)
(-58, -39, 'DDGerr', -1)
(-33, -39, 'CDG', -1)
(-93, -39, 'DDGerr', -1)
(-74, -105, 'CDG', -1)
(-49, -53, 'DDGmsg', -1)
(-33, -105, 'CDG', -1)
(-33, -115, 'CDG', -1)
(-33, -93, 'DDGngx_sys_errlist', -1)
(-93, -84, 'DDGngx_sys_errlist[err - ngx_first_error].data', -1)
(-74, -84, 'CDG', -1)
(-21, -93, 'DDGngx_first_error', -1)
(-49, -84, 'DDGerr', -1)
(-93, -58, 'DDGngx_sys_errlist[err - ngx_first_error].data', -1)
(-70, -108, 'DDGlen', -1)
(-93, -84, 'DDGngx_first_error', -1)
(-84, -58, 'DDGngx_sys_errlist[err - ngx_first_error].len', -1)
(-29, -70, 'DDGlen', -1)
===========================
(-38, -1, '-', 0, '-178', 'goto failed;')
(-21, -1, '-', 0, '-174', 'len = (ngx_last_error - ngx_first_error) * sizeof(ngx_str_t)')
(-105, -1, '-', 0, '-205', 'err = errno')
(-53, -1, '-', 0, '-184', 'if (msg == NULL)')
(-65, -1, '-', 0, '-186', 'continue;')
(-8, -1, '-', 0, '-95', 'ngx_strerror_init (void)')
(-18, -1, '-', 0, '-105', 'ngx_last_error = NGX_SYS_NERR')
(-29, -1, '-', 0, '-176', 'ngx_sys_errlist = malloc(len)')
(-102, -1, '-', 0, '-201', 'return NGX_OK;')
(-70, -1, '-', 0, '-191', 'p = malloc(len)')
(-84, -1, '-', 0, '-197', 'ngx_sys_errlist[err - ngx_first_error].len = len')
(-15, -1, '-', 0, '-104', 'ngx_first_error = 0')
(-9, -1, '-', 0, '-96', 'void')
(-33, -1, '-', 0, '-177', 'if (ngx_sys_errlist == NULL)')
(-66, -1, '-', 0, '-189', 'len = ngx_strlen(msg)')
(-79, -1, '-', 0, '-193', 'goto failed;')
(-58, -1, '-', 0, '-185', 'ngx_sys_errlist[err - ngx_first_error] = ngx_unknown_error')
(-39, -1, '-', 0, '-181', 'for (err = ngx_first_error; err < ngx_last_error; err++)')
(-74, -1, '-', 0, '-192', 'if (p == NULL)')
(-49, -1, '-', 0, '-182', 'msg = strerror(err)')
(-93, -1, '-', 0, '-198', 'ngx_sys_errlist[err - ngx_first_error].data = p')
(-80, -1, '-', 0, '-196', 'ngx_memcpy(p, msg, len)')
(-104, -1, '-', 0, '-203', 'failed:')
(-115, -1, '-', 0, '-208', 'return NGX_ERROR;')
(-108, -1, '-', 0, '-206', 'ngx_log_stderr(0, "malloc(%uz) failed (%d: %s)", len, err, strerror(err))')
---------------------------
(-130, -142, 'CDG', 1)
(-126, -130, 'DDGmsg', 1)
(-130, -135, 'CDG', 1)
(-130, -149, 'DDGmsg', 1)
(-135, -158, 'DDGmsg', 1)
(-135, -142, 'DDGngx_unknown_error.data', 1)
(-142, -153, 'DDGlen', 1)
(-149, -158, 'DDGmsg', 1)
(-130, -149, 'CDG', 1)
(-149, -153, 'DDGlen', 1)
(-121, -153, 'DDGsize', 1)
(-153, -158, 'DDGsize', 1)
===========================
(-5, 1, '-', 0, '+49', 'return NGX_OK;')
(-2, 1, '-', 0, '+46', 'ngx_strerror_init (void)')
(-3, 1, '-', 0, '+47', 'void')
(-153, 1, '-', 0, '+40', 'size = ngx_min(size, len)')
(-149, 1, '-', 0, '+37', 'len = ngx_strlen(msg)')
(-130, 1, '-', 0, '+32', 'if (msg == NULL)')
(-147, 1, '-', 0, '+36', 'else')
(-135, 1, '-', 0, '+33', 'msg = (char *) ngx_unknown_error.data')
(-121, 1, '-', 0, '+25', 'u_char *errstr')
(-158, 1, '-', 0, '+42', 'return ngx_cpymem(errstr, msg, size);')
(-142, 1, '-', 0, '+34', 'len = ngx_unknown_error.len')
(-119, 1, '-', 0, '+24', 'ngx_strerror (ngx_err_t err,u_char *errstr,size_t size)')
(-126, 1, '-', 0, '+30', 'msg = strerrordesc_np(err)')
