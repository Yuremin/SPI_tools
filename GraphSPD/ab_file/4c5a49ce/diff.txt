diff -brN -U 0 -p ./ab_file/4c5a49ce/a/ngx_errno.c ./ab_file/4c5a49ce/b/ngx_errno.c
--- ./ab_file/4c5a49ce/a/ngx_errno.c	2024-04-11 16:21:09.000000000 +0800
+++ ./ab_file/4c5a49ce/b/ngx_errno.c	2024-04-11 16:21:08.000000000 +0800
@@ -11,0 +12,43 @@
+static ngx_str_t   ngx_unknown_error = ngx_string("Unknown error");
+
+
+#if (NGX_HAVE_STRERRORDESC_NP)
+
+/*
+ * The strerrordesc_np() function, introduced in glibc 2.32, is
+ * async-signal-safe.  This makes it possible to use it directly,
+ * without copying error messages.
+ */
+
+
+u_char *
+ngx_strerror(ngx_err_t err, u_char *errstr, size_t size)
+{
+    size_t       len;
+    const char  *msg;
+
+    msg = strerrordesc_np(err);
+
+    if (msg == NULL) {
+        msg = (char *) ngx_unknown_error.data;
+        len = ngx_unknown_error.len;
+
+    } else {
+        len = ngx_strlen(msg);
+    }
+
+    size = ngx_min(size, len);
+
+    return ngx_cpymem(errstr, msg, size);
+}
+
+
+ngx_int_t
+ngx_strerror_init(void)
+{
+    return NGX_OK;
+}
+
+
+#else
+
@@ -29 +71,0 @@ static ngx_str_t  *ngx_sys_errlist;
-static ngx_str_t   ngx_unknown_error = ngx_string("Unknown error");
@@ -166,0 +209,2 @@ failed:
+
+#endif
diff -brN -U 0 -p ./ab_file/4c5a49ce/a/unix ./ab_file/4c5a49ce/b/unix
--- ./ab_file/4c5a49ce/a/unix	2024-04-11 16:21:09.000000000 +0800
+++ ./ab_file/4c5a49ce/b/unix	2024-04-11 16:21:08.000000000 +0800
@@ -730,5 +730,6 @@ ngx_feature_test="char buf[1]; struct io
-ngx_feature="sys_nerr"
-ngx_feature_name="NGX_SYS_NERR"
-ngx_feature_run=value
-ngx_feature_incs='#include <errno.h>
-                  #include <stdio.h>'
+# strerrordesc_np(), introduced in glibc 2.32
+
+ngx_feature="strerrordesc_np()"
+ngx_feature_name="NGX_HAVE_STRERRORDESC_NP"
+ngx_feature_run=no
+ngx_feature_incs='#include <string.h>'
@@ -737 +738,2 @@ ngx_feature_libs=
-ngx_feature_test='printf("%d", sys_nerr);'
+ngx_feature_test="char *p; p = strerrordesc_np(0);
+                  if (p == NULL) return 1"
@@ -742,0 +745,14 @@ if [ $ngx_found = no ]; then
+    ngx_feature="sys_nerr"
+    ngx_feature_name="NGX_SYS_NERR"
+    ngx_feature_run=value
+    ngx_feature_incs='#include <errno.h>
+                      #include <stdio.h>'
+    ngx_feature_path=
+    ngx_feature_libs=
+    ngx_feature_test='printf("%d", sys_nerr);'
+    . auto/feature
+fi
+
+
+if [ $ngx_found = no ]; then
+
